# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and deploy Backend Gamefuse

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ develop ]

env:
  default-branch: main
  PATH_TO_CODE: /var/www/gamefuseApi
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  JWT_EXPIRATION: ${{secrets.JWT_EXPIRATION}}
  MONGO_URI: ${{secrets.MONGO_URI}}
  MAILJET_API_SECRET: ${{secrets.MAILJET_API_SECRET}}
  MAILJET_EMAIL_FROM: ${{secrets.MAILJET_EMAIL_FROM}}
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_REGION: ${{secrets.AWS_REGION}}
  AWS_BUCKET_NAME: ${{secrets.AWS_BUCKET_NAME}}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test --if-present

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Zip artifact for deployment
        if: github.ref == 'refs/heads/main'
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3.1.2
        with:
          name: app
          path: release.zip

  deploy_to_production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            sudo find /var/www/gamefuseApi -type f ! -name "file1.txt" ! -name "file2.txt" -exec rm -f {} +

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: app

      - name: transfer files to remote server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: release.zip
          target: ${{env.PATH_TO_CODE}}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd /var/www/gamefuseApi
            sudo unzip -o release.zip
            sudo rm -rf release.zip

